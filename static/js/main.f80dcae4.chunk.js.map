{"version":3,"sources":["img/dev.jfif","firebase/config.js","firebase/firebase.js","component/inputExpenses.jsx","component/showBalance.jsx","component/month.js","component/transaction.jsx","component/history.jsx","component/main.jsx","component/about.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","initializeApp","InputExpenses","state","transaction","amount","updateInput","e","setState","target","id","value","addTransaction","isNaN","alert","c","firestore","collection","add","name","type","date","Date","then","docRef","console","log","catch","error","setInputNull","goAbout","window","location","href","props","hrefOnClick","this","className","align","style","textAlign","paddingBlockEnd","onClick","fontSize","color","opacity","placeholder","onChange","display","width","React","Component","ShowBalance","total","income","expense","colSpan","border","paddingBlock","Math","abs","m","Transaction","month","t_date","toDate","datet","getDate","getMonth","getYear","History","Income","Expense","data","delDataTest","confirm","delData","db","forEach","item","doc","delete","showLog","queryData","dataList","incomeList","expensesList","DataTest","push","orderBy","onSnapshot","querySnapshot","dataQ","Number","reduce","a","b","map","key","MainPage","About","src","image","alt","to","App","goHome","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f80dcae4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dev.cb83a55c.jfif\";","const config = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASEURL,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENTID\r\n}\r\n\r\nexport default config","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport config from './config'\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config)\r\n}\r\n\r\nexport default firebase","import React from 'react'\r\nimport firebase from '../firebase/firebase'\r\n\r\nclass InputExpenses extends React.Component{\r\n\r\n    state = {\r\n        transaction: \"\",\r\n        amount: \"\",\r\n    }\r\n\r\n    updateInput = e =>{\r\n        // console.log(`[${e.target.id}]: ${e.target.value}`)\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    setInputNull(params = []) {\r\n        this.setState({\r\n            transaction: \"\",\r\n            amount: \"\",\r\n        })\r\n    }\r\n\r\n    addTransaction = () =>{ \r\n        const {transaction, amount} = this.state\r\n        if(transaction!=\"\" && isNaN(transaction)){\r\n            // let amount = Number(document.getElementById(\"amount\").value)\r\n            if(amount==0){\r\n                alert(\"please enter amount and amount is not zero\")\r\n            }else{\r\n                const db = firebase.firestore()\r\n                let c = (amount>0)?\"I\":\"E\"\r\n                db.collection(\"history\").add({\r\n                    name: transaction,\r\n                    amount: amount,\r\n                    type: c,\r\n                    date: new Date(),\r\n                }).then(\r\n                    (docRef) => {\r\n                        console.log(\"Document written with ID: \", docRef.id)\r\n                    }).catch(function(error) {\r\n                        console.error(\"Error adding document: \", error);\r\n                    });\r\n            }\r\n        }else{\r\n            alert((transaction==\"\")?\"please enter transaction\":\"transaction not is number\")\r\n        }\r\n        this.setInputNull([\"transaction\", \"amount\"])\r\n     }\r\n    goAbout = () => { window.location.href += (this.props.hrefOnClick == null)?\"about\":this.props.hrefOnClick }\r\n    render(){\r\n        return (\r\n            <div className=\"InputExpenses\">\r\n                <table align=\"center\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{textAlign: \"center\", paddingBlockEnd: \"3%\"}}><h1 onClick={this.goAbout} style={{fontSize: \"400%\", color: \"#93e0ed\"}}><b>$</b> My Expenses</h1></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style={{paddingBlockEnd: \"3%\"}}>\r\n                                <span style={{opacity: 0.8}}>TransactionName:</span>\r\n                                <br/>\r\n                                <input className=\"input is-info\" type=\"text\" placeholder=\"Expense detail\" id=\"transaction\" onChange={this.updateInput} value={this.state.transaction}></input>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style={{paddingBlockEnd: \"3%\"}}>\r\n                                <span style={{opacity: 0.8}}>Amount (+:income / -:expense):</span>\r\n                                <br/>\r\n                                <input className=\"input is-info\" type=\"number\" placeholder=\"0.00\" id=\"amount\" onChange={this.updateInput} value={this.state.amount}></input>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <button type=\"button\" className=\"button is-info\" style={{display: \"block\", width: \"100%\"}} onClick={this.addTransaction}>Add Transaction</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputExpenses","import React from 'react'\r\nimport firebase from '../firebase/firebase'\r\n\r\nclass ShowBalance extends React.Component{\r\n    render(){\r\n        const total = this.props.income + this.props.expense\r\n        return (\r\n            <div className=\"ShowBalance\">\r\n                <table align=\"center\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colSpan=\"3\" style={{textAlign: \"center\", fontSize: \"200%\", paddingBlockEnd: \"3%\"}}>\r\n                                <span style={{opacity: 0.8}}>Your Balance</span>\r\n                                <br/>\r\n                                <span>{(total>0)?\"+\":(total==0)?\"\":\"-\"}฿{total}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <table className=\"table\" style={{border: \"10px solid white\"}}>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{textAlign: \"center\", fontSize: \"200%\", paddingBlock: \"3%\"}}>\r\n                                                <span style={{opacity: 0.9}}>Income</span>\r\n                                                <br/>\r\n                                                <span style={{color: \"#1bf560\", opacity: 0.8}}>฿{this.props.income}</span>\r\n                                            </td>\r\n                                            <td style={{textAlign: \"center\", fontSize: \"400%\", paddingBlock: \"5%\", color: \"whitesmoke\"}}>\r\n                                                <span>|</span>\r\n                                            </td>\r\n                                            <td style={{textAlign: \"center\", fontSize: \"200%\", paddingBlock: \"3%\"}}>\r\n                                                <span style={{opacity: 0.9}}>Expense</span>\r\n                                                <br/>\r\n                                                <span style={{color: \"#e00b21\", opacity: 0.8}}>฿{Math.abs(this.props.expense)}</span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default ShowBalance","var m = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\nexport default function month_map(month) {\r\n    return m[month]\r\n}","import React from 'react'\r\nimport monthName from '../component/month'\r\n\r\nclass Transaction extends React.Component{\r\n    render(){\r\n        const {id, name, amount, date } = this.props.transaction\r\n        const t_date = new Date(date.toDate())\r\n        // const t_date = new Date(date)\r\n        const datet = `${t_date.getDate()} ${monthName(t_date.getMonth())} ${t_date.getYear()+1900}`\r\n        return (<tr id={id}>\r\n                    <td>{ name }</td>\r\n                    <td>{ amount }</td>\r\n                    <td>{ amount<0?'expense':'income' }</td>\r\n                    <td>{ `${datet}` }</td>\r\n                    <td className={amount<0?\"is-danger\":\"is-success\"}></td>\r\n                </tr>)\r\n    }\r\n}\r\nexport default Transaction","import React from 'react'\r\nimport ShowBalance from './showBalance'\r\nimport firebase from '../firebase/firebase'\r\nimport DataTest from '../testData/dataG.json'\r\nimport Transaction from '../component/transaction'\r\n\r\nclass History extends React.Component{\r\n\r\n    state = {\r\n        Income: [],\r\n        Expense: [],\r\n        data: [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.queryData()\r\n        // this.queryDataTest()\r\n    }\r\n\r\n    delDataTest = (e) => {\r\n        let con = window.confirm('Sure to delete?')\r\n        if(con){\r\n            this.setState({\r\n                Income: [],\r\n                Expense: [],\r\n                data: [],\r\n            })\r\n        }\r\n    }\r\n\r\n    queryDataTest(){\r\n        var dataList = []\r\n        var incomeList = []\r\n        var expensesList = []\r\n        DataTest.forEach((item)=>{\r\n            dataList.push(item)\r\n            if(item.amount > 0){\r\n                incomeList.push(item.amount)\r\n            }else{\r\n                expensesList.push(item.amount)\r\n            }\r\n        })\r\n        this.setState({\r\n            Income: incomeList,\r\n            Expense: expensesList,\r\n            data: dataList,\r\n        })\r\n    }\r\n\r\n    delData = (e) => {\r\n        let con = window.confirm('Sure to delete?')\r\n        if(con){\r\n            var db = firebase.firestore()\r\n            this.state.data.forEach((item)=>{\r\n                db.collection(\"history\").doc(item.id).delete().then(()=>{\r\n                    console.log(`${item.id} successfully deleted !!!`)\r\n                }).catch(function(error) {\r\n                    console.error(\"Error removing document: \", error);\r\n                })\r\n            })\r\n            this.setState({\r\n                Income: [],\r\n                Expense: [],\r\n                data: [],\r\n            })\r\n        }\r\n    }\r\n\r\n    queryData(){\r\n        var db = firebase.firestore()\r\n        db.collection(\"history\").orderBy(\"date\").onSnapshot(querySnapshot => {\r\n            var incomeList = []\r\n            var expensesList = []\r\n            var dataList = []\r\n            querySnapshot.forEach((doc)=>{\r\n                let dataQ = doc.data()\r\n                dataQ[\"id\"] = doc.id\r\n                dataList.push(dataQ)\r\n                let amount = Number(doc.data().amount)\r\n                if(amount > 0){\r\n                    incomeList.push(amount)\r\n                }else{\r\n                    expensesList.push(amount)\r\n                }\r\n            })\r\n            this.setState({\r\n                Income: incomeList,\r\n                Expense: expensesList,\r\n                data: dataList,\r\n            })\r\n        })\r\n    }\r\n\r\n    showLog = ()=>{\r\n        console.log(this.state.data)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"History\">\r\n                <ShowBalance income={this.state.Income.reduce((a,b) => a + b, 0)} expense={this.state.Expense.reduce((a,b) => a + b, 0)}/>\r\n                <table align=\"center\" className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{textAlign: \"center\", fontSize: \"200%\", paddingBlockEnd: \"3%\"}}>\r\n                                <span style={{opacity: 0.8}}>Transaction History</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr style={{paddingBlockEnd: \"3%\"}}>\r\n                            <td>\r\n                                <table className=\"table is-striped is-fullwidth\" align=\"center\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style={{opacity: 0.8}}>Name</th>\r\n                                            <th style={{opacity: 0.8}}>Amount</th>\r\n                                            <th style={{opacity: 0.8}}>Type</th>\r\n                                            <th colSpan=\"2\" style={{opacity: 0.8}}>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"tbodyData\">\r\n                                        {\r\n                                            this.state.data.map((item) => \r\n                                            (<Transaction transaction={item} key={item.id}/>)\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                            <button type=\"button\" className=\"button is-fullwidth is-danger\" style={{display: \"block\", width: \"100%\"}} onClick={this.delData}>Clear History</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default History","import React from 'react'\r\nimport InputExpenses from './inputExpenses'\r\nimport History from './history'\r\nexport default function MainPage(){\r\n        return (<div className=\"main\">\r\n                    <InputExpenses hrefOnClick=\"about\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <History />\r\n                </div>)\r\n}\r\n\r\n","import React from 'react'\r\nimport image from '../img/dev.jfif'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n        <br/>\r\n        <table align=\"center\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <div className=\"container\">\r\n                            <div className=\"card is-centered\">\r\n                            <img src={image} className='card-image' alt=\"...\" />\r\n                            <div className=\"card-content\">\r\n                                <h5 className=\"card-header-title\">Developer information</h5>\r\n                                <p>Kittinan Prompao (610610569)</p>\r\n                                <p>This app use Google Firebase as backend.</p>\r\n                                <Link to=\"/\">\r\n                                <h3>\r\n                                    <button type=\"button\" className=\"button is-info\">Home</button>\r\n                                </h3>\r\n                                </Link>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport 'bulma/css/bulma.css'\nimport MainPage from './component/main'\nimport About from './component/about'\nvar homeLocate = \"http://localhost:3000\"\n\nclass App extends React.Component{\n    \n    goHome = () => { window.location.href = homeLocate }\n\n  render(){\n    return (\n        <Router>\n            <div className=\"App\">\n                <div className=\"container\">\n                    <Route exact path=\"/\" component={MainPage}/>\n                    <Route exact path=\"/about\" component={About}/>\n                </div>\n            </div>\n        </Router>\n      \n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}